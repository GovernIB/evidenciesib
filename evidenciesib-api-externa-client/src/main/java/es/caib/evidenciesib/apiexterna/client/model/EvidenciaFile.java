/*
 * API REST EXTERNA de EvidenciesIB
 * Conjunt de Serveis REST de EvidenciesIB per ser accedits des de l'exterior
 *
 * OpenAPI spec version: 1.0.0
 * Contact: governdigital@fundaciobit.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package es.caib.evidenciesib.apiexterna.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Objecte per enviar i rebre fitxers així com la informació associada a aquest.
 */
@Schema(description = "Objecte per enviar i rebre fitxers així com la informació associada a aquest.")

public class EvidenciaFile {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("mime")
  private String mime = null;

  @JsonProperty("size")
  private Long size = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("encryptedFileID")
  private String encryptedFileID = null;

  @JsonProperty("document")
  private byte[] document = null;

  public EvidenciaFile name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Nom del fitxer
   * @return name
  **/
  @Schema(description = "Nom del fitxer")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public EvidenciaFile mime(String mime) {
    this.mime = mime;
    return this;
  }

   /**
   * Tipus MIME del Fitxer
   * @return mime
  **/
  @Schema(description = "Tipus MIME del Fitxer")
  public String getMime() {
    return mime;
  }

  public void setMime(String mime) {
    this.mime = mime;
  }

  public EvidenciaFile size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Mida en bytes del document
   * @return size
  **/
  @Schema(description = "Mida en bytes del document")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public EvidenciaFile description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Descripció del Fitxer
   * @return description
  **/
  @Schema(description = "Descripció del Fitxer")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public EvidenciaFile encryptedFileID(String encryptedFileID) {
    this.encryptedFileID = encryptedFileID;
    return this;
  }

   /**
   * Identificar del fitxer per poder-ho recuperar en una segona fase. Només apareix en llistats per no incloure el contingut del fitxer.
   * @return encryptedFileID
  **/
  @Schema(description = "Identificar del fitxer per poder-ho recuperar en una segona fase. Només apareix en llistats per no incloure el contingut del fitxer.")
  public String getEncryptedFileID() {
    return encryptedFileID;
  }

  public void setEncryptedFileID(String encryptedFileID) {
    this.encryptedFileID = encryptedFileID;
  }

  public EvidenciaFile document(byte[] document) {
    this.document = document;
    return this;
  }

   /**
   * Contingut del fitxer. En llistats aquest camp vendrà buit.
   * @return document
  **/
  @Schema(description = "Contingut del fitxer. En llistats aquest camp vendrà buit.")
  public byte[] getDocument() {
    return document;
  }

  public void setDocument(byte[] document) {
    this.document = document;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EvidenciaFile evidenciaFile = (EvidenciaFile) o;
    return Objects.equals(this.name, evidenciaFile.name) &&
        Objects.equals(this.mime, evidenciaFile.mime) &&
        Objects.equals(this.size, evidenciaFile.size) &&
        Objects.equals(this.description, evidenciaFile.description) &&
        Objects.equals(this.encryptedFileID, evidenciaFile.encryptedFileID) &&
        Arrays.equals(this.document, evidenciaFile.document);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, mime, size, description, encryptedFileID, Arrays.hashCode(document));
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EvidenciaFile {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    mime: ").append(toIndentedString(mime)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    encryptedFileID: ").append(toIndentedString(encryptedFileID)).append("\n");
    sb.append("    document: ").append(toIndentedString(document)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
