/*
 * API REST EXTERNA de EvidenciesIB
 * Conjunt de Serveis REST de EvidenciesIB per ser accedits des de l'exterior
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: governdigital@fundaciobit.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package es.caib.evidenciesib.apiexterna.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Objecte per enviar i rebre fitxers així com la informació associada a aquest. No utilitza byte[] que falla dins del JBoss7 sinó que utilitza un String per enviar el fitxer en Base64
 */
@JsonPropertyOrder({
  EvidenciaFileBase64.JSON_PROPERTY_NAME,
  EvidenciaFileBase64.JSON_PROPERTY_MIME,
  EvidenciaFileBase64.JSON_PROPERTY_SIZE,
  EvidenciaFileBase64.JSON_PROPERTY_DESCRIPTION,
  EvidenciaFileBase64.JSON_PROPERTY_ENCRYPTED_FILE_I_D,
  EvidenciaFileBase64.JSON_PROPERTY_DOCUMENT_BASE64
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EvidenciaFileBase64 {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_MIME = "mime";
  private String mime;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Long size;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ENCRYPTED_FILE_I_D = "encryptedFileID";
  private String encryptedFileID;

  public static final String JSON_PROPERTY_DOCUMENT_BASE64 = "documentBase64";
  private String documentBase64;

  public EvidenciaFileBase64() {
  }

  public EvidenciaFileBase64 name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Nom del fitxer
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public EvidenciaFileBase64 mime(String mime) {
    
    this.mime = mime;
    return this;
  }

   /**
   * Tipus MIME del Fitxer
   * @return mime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMime() {
    return mime;
  }


  @JsonProperty(JSON_PROPERTY_MIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMime(String mime) {
    this.mime = mime;
  }


  public EvidenciaFileBase64 size(Long size) {
    
    this.size = size;
    return this;
  }

   /**
   * Mida en bytes del document
   * @return size
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSize(Long size) {
    this.size = size;
  }


  public EvidenciaFileBase64 description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Descripció del Fitxer
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public EvidenciaFileBase64 encryptedFileID(String encryptedFileID) {
    
    this.encryptedFileID = encryptedFileID;
    return this;
  }

   /**
   * Identificar del fitxer per poder-ho recuperar en una segona fase. Només apareix en llistats per no incloure el contingut del fitxer.
   * @return encryptedFileID
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENCRYPTED_FILE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEncryptedFileID() {
    return encryptedFileID;
  }


  @JsonProperty(JSON_PROPERTY_ENCRYPTED_FILE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncryptedFileID(String encryptedFileID) {
    this.encryptedFileID = encryptedFileID;
  }


  public EvidenciaFileBase64 documentBase64(String documentBase64) {
    
    this.documentBase64 = documentBase64;
    return this;
  }

   /**
   * Contingut del fitxer en Base64. En llistats aquest camp vendrà buit.
   * @return documentBase64
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_BASE64)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocumentBase64() {
    return documentBase64;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_BASE64)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentBase64(String documentBase64) {
    this.documentBase64 = documentBase64;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EvidenciaFileBase64 evidenciaFileBase64 = (EvidenciaFileBase64) o;
    return Objects.equals(this.name, evidenciaFileBase64.name) &&
        Objects.equals(this.mime, evidenciaFileBase64.mime) &&
        Objects.equals(this.size, evidenciaFileBase64.size) &&
        Objects.equals(this.description, evidenciaFileBase64.description) &&
        Objects.equals(this.encryptedFileID, evidenciaFileBase64.encryptedFileID) &&
        Objects.equals(this.documentBase64, evidenciaFileBase64.documentBase64);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, mime, size, description, encryptedFileID, documentBase64);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EvidenciaFileBase64 {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    mime: ").append(toIndentedString(mime)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    encryptedFileID: ").append(toIndentedString(encryptedFileID)).append("\n");
    sb.append("    documentBase64: ").append(toIndentedString(documentBase64)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

